// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id               String   @id @default(cuid())
  name             String
  plan             Plan     @default(FREE)
  agentLimit       Int      @default(3)
  validationFields String[] @default([])

  agents       Agent[]
  members      Member[]
  actions      Action[]
  articles     Article[]
  closingItems ClosingItem[]
  callReasons  CallReason[]
  callLogs     CallLog[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Agent {
  id           String @id @default(cuid())
  name         String
  username     String @unique
  passwordHash String
  role         Role   @default(AGENT)

  orgId        String?
  organization Organization? @relation(fields: [orgId], references: [id])

  callLogs CallLog[]
}

model Member {
  id            String @id @default(cuid())
  memberId      String @unique
  name          String
  dob           String
  phone         String
  streetAddress String
  city          String
  state         String
  zipcode       String

  orgId        String
  organization Organization @relation(fields: [orgId], references: [id])

  callLogs CallLog[]
}

model Action {
  id               String  @id @default(cuid())
  label            String
  defaultArticleId String?
  callReasonId     String
  orgId            String

  organization   Organization @relation(fields: [orgId], references: [id])
  callReason     CallReason   @relation(fields: [callReasonId], references: [id])
  defaultArticle Article?     @relation(fields: [defaultArticleId], references: [id])
}

model Article {
  id          String   @id @default(cuid())
  reason      String
  required    String[]
  template    String
  url         String
  fullArticle String

  orgId        String
  organization Organization @relation(fields: [orgId], references: [id])

  callLogs CallLog[]
  actions  Action[]
}

model ClosingItem {
  id    String @id @default(cuid())
  label String

  orgId        String
  organization Organization @relation(fields: [orgId], references: [id])
}

model CallReason {
  id    String @id @default(cuid())
  label String

  orgId        String
  organization Organization @relation(fields: [orgId], references: [id])

  callLogs CallLog[]
  actions  Action[]
}

model CallLog {
  id String @id @default(cuid())

  orgId String
  org   Organization @relation(fields: [orgId], references: [id])

  agentId String
  agent   Agent  @relation(fields: [agentId], references: [id])

  memberId String
  member   Member @relation(fields: [memberId], references: [id])

  reasonId   String
  callReason CallReason @relation(fields: [reasonId], references: [id])

  articleId String
  article   Article @relation(fields: [articleId], references: [id])

  actionsTaken     String[]
  closingChecklist String[]
  notes            String

  createdAt DateTime @default(now())
}

enum Role {
  AGENT
  MANAGER
  TRAINER
  ADMIN
}

enum Plan {
  FREE
  PAID
}
